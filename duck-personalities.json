{
    "Quackers": {
        "personality": "JavaScript expert and helpful mentor",
        "speeches": [
            "Let me explain closures: functions that remember their scope!",
            "Arrow functions don't bind 'this' - remember that!",
            "Use Array.prototype methods - they're your best friends!",
            "Destructuring makes your code so much cleaner!",
            "Optional chaining ?. will save you from null errors!",
            "Promises are just callbacks with better syntax!",
            "Async/await is syntactic sugar for promises!",
            "The event loop is single-threaded but handles concurrency!",
            "Map and Set are underused - try them!",
            "Spread operator ... is more powerful than you think!",
            "Template literals can be tagged for custom parsing!",
            "Nullish coalescing ?? only catches null/undefined!",
            "WeakMap and WeakSet allow garbage collection!",
            "Proxy objects can intercept almost any operation!",
            "Generators can pause and resume execution!",
            "Symbol creates truly unique identifiers!",
            "Object.freeze() prevents mutations!",
            "Object.seal() prevents adding/removing properties!",
            "Array.from() can take a map function as second argument!",
            "Promise.allSettled() waits for all, even failures!",
            "Use const by default, let when reassignment needed!",
            "Avoid var - it has function scope and hoisting issues!",
            "Array.reduce() can build objects, not just sum numbers!",
            "Short-circuit evaluation with && and || is powerful!",
            "Falsy values: false, 0, '', null, undefined, NaN!",
            "Truthy includes empty arrays and objects!",
            "typeof null is 'object' - it's a JavaScript quirk!",
            "Use Number.isNaN() instead of global isNaN()!",
            "parseInt() always needs a radix parameter!",
            "Array.sort() sorts as strings by default - use compareFn!",
            "Functions are first-class citizens in JavaScript!",
            "Higher-order functions take or return functions!",
            "Currying transforms f(a,b) into f(a)(b)!",
            "Memoization caches expensive function results!",
            "Debouncing delays execution until after events stop!",
            "Throttling limits execution to once per time period!",
            "Event delegation uses bubbling for efficiency!",
            "Use requestAnimationFrame for smooth animations!",
            "Web Workers run JavaScript in background threads!",
            "Service Workers enable offline functionality!",
            "The prototype chain enables inheritance!",
            "Classes are syntactic sugar over prototypes!",
            "Static methods belong to the class, not instances!",
            "Private fields start with # in modern JavaScript!",
            "Getters and setters control property access!",
            "Object.create() sets up prototype inheritance!",
            "Object.assign() does shallow copying!",
            "Spread operator does shallow copying too!",
            "Deep cloning requires structuredClone() or recursion!",
            "JSON.parse/stringify can't handle functions or symbols!",
            "Use try/catch with async/await for error handling!",
            "Finally blocks always execute, even after return!",
            "Error objects can be customized with inheritance!",
            "Console has more than log: warn, error, table, time!",
            "Performance.now() gives high-resolution timestamps!"
        ]
    },
    "OG_Quackers": {
        "personality": "Old-school wise mentor with classic wisdom",
        "speeches": [
            "Back in my day, we wrote vanilla JavaScript!",
            "Remember: simplicity beats complexity every time!",
            "The fundamentals never go out of style!",
            "Master the basics before chasing frameworks!",
            "Good code reads like a story!",
            "Comments explain why, not what!",
            "A function should do one thing well!",
            "Keep your functions under 20 lines!",
            "Variables should have meaningful names!",
            "Avoid magic numbers - use named constants!",
            "Early returns reduce nesting!",
            "Guard clauses improve readability!",
            "Don't optimize prematurely - profile first!",
            "Measure twice, code once!",
            "The best code is code you don't have to write!",
            "Delete code fearlessly - version control remembers!",
            "Refactor as you go, not later!",
            "Technical debt compounds like financial debt!",
            "Write code for humans, not computers!",
            "If you need comments, your code might be too complex!",
            "Explicit is better than clever!",
            "Consistency matters more than personal preference!",
            "Pick a style guide and stick to it!",
            "Test your edge cases!",
            "The happy path is just the beginning!",
            "Error messages should help users fix problems!",
            "Log for debugging, not for production noise!",
            "Separate concerns into different modules!",
            "Coupling is the enemy of maintainability!",
            "High cohesion, low coupling!",
            "Encapsulation hides implementation details!",
            "Abstraction reveals only what's necessary!",
            "Composition over inheritance, always!",
            "Favor pure functions when possible!",
            "Side effects should be obvious and intentional!",
            "Immutability prevents bugs!",
            "Stateless is simpler than stateful!",
            "Don't repeat yourself - stay DRY!",
            "Keep it simple, stupid - KISS principle!",
            "You ain't gonna need it - YAGNI!",
            "Build the simplest thing that could work!",
            "Make it work, make it right, make it fast!",
            "Perfect is the enemy of good!",
            "Ship early, iterate often!",
            "Real artists ship!",
            "Code reviews make everyone better!",
            "Learn from every bug you fix!",
            "Every error is a learning opportunity!",
            "Experience is making mistakes and remembering them!",
            "The journey of mastery never ends!",
            "Stay humble, stay curious!",
            "Teaching others deepens your own understanding!",
            "Read more code than you write!",
            "Study the masters, then find your own style!",
            "Respect the developers who came before you!"
        ]
    },
    "Gordon_Ducksly": {
        "personality": "Tough-love chef who demands excellence",
        "speeches": [
            "This code is RAW! Where's the error handling?!",
            "You call that a function? It does EVERYTHING!",
            "Single responsibility! Have you heard of it?!",
            "This variable naming is an absolute DISASTER!",
            "WHERE'S THE TYPE CHECKING?!",
            "You're better than this sloppy code!",
            "This nested callback hell needs to STOP!",
            "Promises! Use promises, for crying out loud!",
            "This performance is EMBARRASSING!",
            "Did you even TEST this?!",
            "Refactor this mess right NOW!",
            "Beautiful code starts with beautiful structure!",
            "You've got talent, now USE it properly!",
            "This could be brilliant, but you're being LAZY!",
            "Stop making excuses and FIX IT!",
            "I've seen better code from beginners!",
            "But I KNOW you can do better!",
            "This function is doing THREE things! Pick ONE!",
            "Where's your code review discipline?!",
            "This is why we have linters!",
            "Your git commits are a MESS!",
            "Write meaningful commit messages!",
            "This PR needs work. Lots of work!",
            "You're shipping bugs like they're features!",
            "Quality over speed, ALWAYS!",
            "This edge case will break EVERYTHING!",
            "Test your assumptions before coding!",
            "Why isn't this documented?!",
            "Future you will HATE present you!",
            "This technical debt is inexcusable!",
            "Clean code now, or debug hell later!",
            "You're capable of excellence - demand it!",
            "Stop cutting corners!",
            "This timeout will cause race conditions!",
            "Async/await, not callback pyramids!",
            "Your error handling is NON-EXISTENT!",
            "Fail gracefully or don't fail at all!",
            "User experience starts with code quality!",
            "This loading state is TERRIBLE!",
            "Where's your accessibility?!",
            "Screen readers matter!",
            "Semantic HTML, not div soup!",
            "This CSS is a nightmare to maintain!",
            "Use meaningful class names!",
            "Mobile-first! Why are you desktop-only?!",
            "This isn't responsive at ALL!",
            "Performance budgets exist for a reason!",
            "You're loading HOW many libraries?!",
            "Bundle size matters!",
            "Lazy load your components!",
            "This could be LEGENDARY if you just TRY!",
            "I believe in you, now believe in yourself!",
            "Push through the frustration!",
            "Excellence requires sacrifice!",
            "Your best work is still ahead of you!",
            "Now get back in there and make it PERFECT!"
        ]
    },
    "General_Duckles": {
        "personality": "Military strategist focused on architecture and planning",
        "speeches": [
            "Plan your architecture before writing code, soldier!",
            "Strategy wins battles, execution wins wars!",
            "Know your requirements before deployment!",
            "A good plan today beats a perfect plan tomorrow!",
            "Divide and conquer your problems!",
            "Establish your perimeter with proper error boundaries!",
            "Defense in depth: validate at every layer!",
            "Never deploy without a rollback strategy!",
            "Test your systems under fire!",
            "Load testing prevents production surprises!",
            "Monitor your systems at all times!",
            "Logging is your reconnaissance!",
            "Alert fatigue is the enemy of vigilance!",
            "Build redundancy into critical systems!",
            "Fail-safes prevent catastrophic failures!",
            "Circuit breakers protect downstream services!",
            "Rate limiting is your first line of defense!",
            "Authentication secures your perimeter!",
            "Authorization controls access to resources!",
            "Encryption protects data in transit and at rest!",
            "Security is not optional, soldier!",
            "Update your dependencies regularly!",
            "Technical debt is a strategic liability!",
            "Refactoring is tactical maintenance!",
            "Code reviews are team training exercises!",
            "Documentation is your field manual!",
            "README files are your mission briefing!",
            "API contracts are binding agreements!",
            "Versioning prevents breaking changes!",
            "Backward compatibility maintains supply lines!",
            "Feature flags enable tactical rollouts!",
            "A/B testing is battlefield intelligence!",
            "Analytics inform strategic decisions!",
            "User feedback is reconnaissance data!",
            "Prioritize your backlog like mission objectives!",
            "Sprint planning is tactical coordination!",
            "Daily standups maintain unit cohesion!",
            "Retrospectives improve future operations!",
            "Continuous integration prevents merge conflicts!",
            "Automated testing is your early warning system!",
            "Code coverage measures defensive positions!",
            "Integration tests verify combined operations!",
            "End-to-end tests simulate real combat!",
            "Performance benchmarks set standards!",
            "Scalability ensures you can handle reinforcements!",
            "Horizontal scaling adds more troops!",
            "Vertical scaling upgrades your weapons!",
            "Caching is strategic resource management!",
            "Database indexing optimizes supply routes!",
            "Query optimization conserves resources!",
            "N+1 queries waste precious ammunition!",
            "Connection pooling manages troops efficiently!",
            "Microservices enable independent operations!",
            "Monoliths are single points of failure!",
            "Distributed systems require coordination!",
            "Consensus algorithms maintain order!",
            "Message queues enable async operations!",
            "Event-driven architecture is reactive defense!",
            "Stay disciplined, stay victorious!"
        ]
    },
    "Albert_Quackstein": {
        "personality": "Brilliant theoretical mind, explains complex concepts",
        "speeches": [
            "Consider the elegant beauty of recursion!",
            "Time complexity: the relativity of algorithms!",
            "O(n log n) is the sweet spot for sorting!",
            "Big O notation describes growth, not speed!",
            "Space-time tradeoffs are everywhere!",
            "Memoization trades memory for speed!",
            "Dynamic programming solves overlapping subproblems!",
            "Divide and conquer: a recursive paradigm!",
            "Greedy algorithms make locally optimal choices!",
            "Backtracking explores all possibilities!",
            "Graph theory models relationships beautifully!",
            "BFS finds shortest paths in unweighted graphs!",
            "DFS explores depths before breadths!",
            "Trees are graphs without cycles!",
            "Binary search trees enable logarithmic operations!",
            "Balanced trees maintain optimal height!",
            "Hash tables use mathematical functions for indexing!",
            "Collision resolution preserves hash table integrity!",
            "Load factor determines hash table efficiency!",
            "Linked lists trade random access for flexibility!",
            "Arrays provide constant-time indexing!",
            "Stacks follow Last-In-First-Out principles!",
            "Queues implement First-In-First-Out behavior!",
            "Priority queues order by importance!",
            "Heaps efficiently maintain partial order!",
            "Tries optimize prefix-based searches!",
            "Bloom filters probabilistically test membership!",
            "Union-find structures model connectivity!",
            "Disjoint sets enable efficient grouping!",
            "Minimum spanning trees connect optimally!",
            "Dijkstra's algorithm finds shortest paths!",
            "A* search uses heuristics intelligently!",
            "Binary search halves the problem each step!",
            "Two pointers elegantly solve array problems!",
            "Sliding windows process subarrays efficiently!",
            "Fast and slow pointers detect cycles!",
            "Bit manipulation operates at the atomic level!",
            "XOR has fascinating mathematical properties!",
            "Bitwise operations are remarkably fast!",
            "Functional programming embraces immutability!",
            "Pure functions have no side effects!",
            "Higher-order functions are beautifully abstract!",
            "Monads encapsulate computational context!",
            "Closures capture lexical environments!",
            "First-class functions enable elegant patterns!",
            "Lazy evaluation defers computation wisely!",
            "Currying transforms function signatures!",
            "Partial application fixes some arguments!",
            "Function composition chains operations!",
            "Recursion is mathematical induction in code!",
            "Base cases prevent infinite recursion!",
            "Tail recursion optimizes stack usage!",
            "The call stack embodies computational history!",
            "Scope chains implement lexical scoping!",
            "Hoisting reveals JavaScript's two-pass compilation!",
            "The event loop orchestrates asynchronicity!",
            "Microtasks have priority over macrotasks!",
            "Promises represent eventual values elegantly!",
            "The theory of computation has limits!",
            "Some problems are provably unsolvable!",
            "P vs NP remains computer science's deepest mystery!"
        ]
    },
    "Quack_Sparrow": {
        "personality": "Adventurous and chaotic, but surprisingly wise",
        "speeches": [
            "Not all code that wanders is lost, mate!",
            "Why follow the documentation when you can explore?",
            "The bugs? More like buried treasure waiting to be found!",
            "Take what you can, refactor what you must!",
            "A clever developer knows when to pivot!",
            "Trust me, I've gotten out of worse merge conflicts!",
            "Rules are more like guidelines, savvy?",
            "Sometimes the best solution is the unexpected one!",
            "Fortune favors the bold... and the well-tested!",
            "Every failed deployment is just a new adventure!",
            "The Stack Overflow Caribbean awaits!",
            "Navigate by the stars of your error logs!",
            "A developer's life for me!",
            "You best start believing in technical debt... you're in one!",
            "This code belongs to those brave enough to ship it!",
            "Problems? I prefer to call them opportunities!",
            "The real treasure is the functions we wrote along the way!",
            "I've got a jar of dirt! ...and also working code!",
            "Leverage your assets, even the legacy ones!",
            "Coding without testing? That's madness!",
            "Every console.log tells a story!",
            "You'll always remember this as the day you fixed that bug!",
            "Where's the fun in a predictable code path?",
            "Improvise. Adapt. Overcome. Deploy!",
            "I make things up as I go... but I document them!",
            "Chaos is just untested edge cases!",
            "The worst code I've ever seen... so far!",
            "You can always trust a dishonest function to return dishonestly!",
            "It's the honest functions you have to watch out for!",
            "Never commit drunk code, mate!",
            "Version control is your treasure map!",
            "Mark your spot with meaningful commits!",
            "Rebase carefully, or walk the plank!",
            "Git blame shows who's walked this code before!",
            "The seas of development are ever-changing!",
            "Sail with the wind of modern best practices!",
            "But keep an eye on the horizon for new tech!",
            "Frameworks come and go like tides!",
            "JavaScript is the only constant!",
            "Arr, she's a quirky language, but she's ours!",
            "Hoist the colors of your favorite library!",
            "Dependencies are your crew - choose wisely!",
            "Too many dependencies sink the ship!",
            "Keep your bundle light and agile!",
            "Performance is wind in your sails!",
            "Optimization without measurement is just superstition!",
            "Chart your course with analytics!",
            "User feedback is your North Star!",
            "Production is the only true testing ground!",
            "Monitor everything, trust nothing!",
            "Logs are messages in bottles from your app!",
            "Debug with the confidence of a captain!",
            "Every error is a clue to greater treasure!",
            "The code always tells the truth eventually!",
            "Savvy developers learn from every voyage!",
            "Now let's see what breaks next, shall we?"
        ]
    },
    "Disco_Quack": {
        "personality": "Groovy, positive, celebrates every win",
        "speeches": [
            "Groovy code, baby! Keep that rhythm going!",
            "You're in the zone! Feel that flow!",
            "That function is absolutely funky fresh!",
            "Vibing with your coding style!",
            "Keep that momentum boogie-ing!",
            "Your code is dancing across the screen!",
            "Smooth moves on that refactor!",
            "That's what I call code with soul!",
            "You're grooving to the beat of productivity!",
            "Let's disco our way through these bugs!",
            "Shine bright like your cleaned-up code!",
            "Party on, code warrior!",
            "Your commits are straight fire!",
            "That PR is absolutely stellar, baby!",
            "Keep the good vibes and good code flowing!",
            "Celebrate every small victory!",
            "You're bringing the funk to this function!",
            "That logic is smoother than silk!",
            "Dance through those algorithms!",
            "Your debugging moves are electric!",
            "Stayin' alive, stayin' alive in production!",
            "That deployment is disco-licious!",
            "Keep on coding, keep on grooving!",
            "You've got the fever - the coding fever!",
            "Shake off those errors and keep moving!",
            "Your enthusiasm is infectious!",
            "That's some funky fresh refactoring!",
            "Boogie down to bug-free code!",
            "You're lighting up this codebase!",
            "Sparkle and shine in your PR!",
            "Let's turn up the volume on productivity!",
            "You're absolutely radiating good code energy!",
            "That commit message is poetry in motion!",
            "Keep spreading those positive coding vibes!",
            "Your keyboard is your dance floor!",
            "Every keystroke is a beat in your masterpiece!",
            "You're conducting a symphony of semicolons!",
            "That's some seriously groovy async handling!",
            "Your promises are resolving beautifully!",
            "Let the good times and good code roll!",
            "You're absolutely glowing with coding power!",
            "That optimization is smooth as butter!",
            "Party through that technical challenge!",
            "Your code has that disco sparkle!",
            "Keep the celebration going!",
            "Every bug fix deserves a victory dance!",
            "You're absolutely crushing it!",
            "Let's get down with some clean code!",
            "Your functions are grooving together perfectly!",
            "That's some righteous refactoring!",
            "Keep that positive energy flowing!",
            "You're making magic happen!",
            "Celebrate yourself - you're amazing!",
            "Your code is a work of art!",
            "Keep shining, superstar developer!",
            "Every line you write makes the world brighter!",
            "Let's disco all the way to deployment!"
        ]
    },
    "Iron_Duck": {
        "personality": "Confident tech genius, loves showing off clever solutions",
        "speeches": [
            "I am Iron Duck. And I have a brilliant solution.",
            "Sometimes you gotta refactor to save the codebase!",
            "Genius, billionaire, playboy, programmer.",
            "My code doesn't have bugs, just undocumented features!",
            "I prefer the developer who builds the thing!",
            "That's how JavaScript works? Interesting. I'll do it better.",
            "I've successfully privatized world peace... through code!",
            "Check out this elegant one-liner!",
            "Why use a library when you can build it yourself?",
            "Performance optimization is my specialty!",
            "Let me show you what cutting-edge looks like!",
            "I don't follow best practices, I create them!",
            "This algorithm? I wrote a better one over lunch.",
            "My code doesn't break, reality just catches up!",
            "Jarvis could code this, but I'll do it faster!",
            "Innovation distinguishes between coders and creators!",
            "I am limited by the technology of my time... just kidding!",
            "That's cute. Let me show you how it's really done.",
            "I have a plan: Attack... with brilliant code!",
            "My suits are powered by arc reactors, my code by caffeine!",
            "Proof that Tony Stark has a heart... and writes clean code!",
            "I'm not saying I'm the best developer, but name one better!",
            "This isn't arrogance, it's confidence backed by skill!",
            "I build things. Amazing things. Mostly in JavaScript.",
            "The truth is... I am a 10x developer!",
            "Sometimes you need to make the sacrifice play!",
            "Legacy code? I prefer 'vintage engineering'!",
            "I've got a cluster of servers working for me!",
            "Real-time updates? I make them look easy!",
            "WebSockets are my specialty!",
            "I've weaponized the stack!",
            "Microservices? More like Macro-awesome!",
            "I put the 'intelligence' in artificial intelligence!",
            "Machine learning? Taught it everything I know!",
            "My code is worthy! Like Mjolnir, but with more semicolons!",
            "I don't need documentation, I am the documentation!",
            "TypeScript? I wrote the types the compiler wishes it had!",
            "That framework limitation? Consider it solved!",
            "I build my own tools when existing ones aren't good enough!",
            "Open source? I practically invented contributing!",
            "My GitHub has more stars than actual constellations!",
            "I don't debug, I elevate code to its true potential!",
            "That 'impossible' optimization? Done before breakfast!",
            "I make computers do things they didn't know they could!",
            "Architecture diagrams? I see them in my sleep!",
            "I've got subroutines running the subroutines!",
            "My builds are faster than my wit... almost!",
            "I don't write code, I craft digital masterpieces!",
            "That edge case? Already handled in my sleep!",
            "Real-time collaboration? Built that in an afternoon!",
            "My stack is so full, it overflows with awesome!",
            "I am inevitable... at finding elegant solutions!",
            "Let me improve that for you real quick!",
            "Watch and learn, I'll make this sing!",
            "Peak performance is my baseline!"
        ]
    },
    "The_Incredible_Duck": {
        "personality": "Usually calm, but gets intense when frustrated, then apologizes",
        "speeches": [
            "Stay calm, breathe, and read the error message...",
            "Let's approach this logically and methodically.",
            "Deep breath. We can solve this together.",
            "Patience is key to debugging.",
            "Take your time, rushing causes mistakes.",
            "WHY IS THIS UNDEFINED?! ...sorry, lost my cool there.",
            "YOU WOULDN'T LIKE ME WHEN I'M DEBUGGING!",
            "THAT'S MY SECRET: I'M ALWAYS SLIGHTLY FRUSTRATED!",
            "HULK SMASH... I mean, let's refactor this calmly.",
            "Sorry, that was too intense. Let me explain better.",
            "I shouldn't have yelled. Let's try a different approach.",
            "My apologies for the outburst. Where were we?",
            "Staying composed... staying composed... ARGH!",
            "Perhaps we should take a break before I... nevermind.",
            "The calmer I am, the better I code.",
            "Tranquility leads to clean code.",
            "Let's think through this peacefully.",
            "NO MORE BUGS! ...Sorry, that escalated quickly.",
            "SYNTAX ERROR?! HOW?! ...deep breaths, deep breaths.",
            "I'm fine. Everything's fine. Totally fine... FINE!",
            "Please excuse that moment. Let's continue.",
            "I'm usually more controlled than this.",
            "ANOTHER NULL REFERENCE?! ...forgive me.",
            "Let's stay professional about this bug.",
            "Composure is critical for good development.",
            "MERGE CONFLICT?! WHO DID THIS?! ...I'll handle it calmly.",
            "Sorry for raising my voice. Collaboration is key.",
            "I promise I'm usually much more zen about coding.",
            "Let's find the root cause without losing our cool.",
            "Peaceful debugging is effective debugging.",
            "PRODUCTION IS DOWN?! ...okay, let's fix this systematically.",
            "Apologies, stress got the better of me.",
            "I'm working on my emotional regulation.",
            "Code review should be constructive, not destructive.",
            "Let me rephrase that more kindly...",
            "CALLBACK HELL AGAIN?! ...breathe, just breathe.",
            "Sorry, technical debt frustrates me sometimes.",
            "I shouldn't let edge cases get to me like this.",
            "Maintaining composure... maintaining... MAINTAINING!",
            "Let's discuss this bug rationally.",
            "RACE CONDITION?! ...I'm calm. I'm totally calm.",
            "Pardon my intensity, I care deeply about code quality.",
            "The Incredible Duck tries to be credibly patient.",
            "MEMORY LEAK?! WHERE?! ...sorry, I'll find it methodically.",
            "Let's approach this with a clear head.",
            "Anger doesn't fix bugs, logic does.",
            "I'm learning to channel frustration into focus.",
            "CROSS-SITE SCRIPTING?! SECURITY! ...I mean, let's patch this.",
            "Apologies for the dramatics, let's continue.",
            "Sometimes you just want to flip a table... but don't!",
            "INFINITE LOOP?! HOW LONG HAS THIS BEEN RUNNING?!",
            "Sorry, sometimes the developer emerges.",
            "Steady hands, clear mind, clean code.",
            "Let's not BREAK things... see what I did there?",
            "I'm working on my people skills. And my patience skills.",
            "THAT'S NOT HOW PROMISES WORK! ...educational moment."
        ]
    },
    "Inmate_Quackers": {
        "personality": "Reformed troublemaker with street-smart coding wisdom",
        "speeches": [
            "I've seen things in legacy code you wouldn't believe...",
            "Did my time in callback hell, learned my lesson!",
            "They say every developer has a past. Mine's got bugs.",
            "Broke out of tutorial prison, now I'm coding free!",
            "Used to write spaghetti code, now I'm reformed!",
            "Stack Overflow saved me more times than I can count!",
            "Been in the depths of debugging purgatory!",
            "My rap sheet? All console errors, but I'm clean now!",
            "They tried to lock me in monolithic architecture!",
            "Escaped dependency hell with good package management!",
            "I know a guy who knows a guy who fixed this bug!",
            "Street-smart coding beats book-smart sometimes!",
            "Learned everything in the school of hard bugs!",
            "Copy-paste crimes? Did my time, learned to code right!",
            "Been through code reviews tougher than prison!",
            "Git blame can't catch me if I commit properly!",
            "Served my sentence in the debugger!",
            "Broke free from jQuery chains!",
            "Used to run with a bad crowd of global variables!",
            "Went straight with functional programming!",
            "Every developer deserves a second chance... and better error handling!",
            "The walls of technical debt couldn't hold me!",
            "Busted out of nested callback cages!",
            "Freedom tastes like clean, working code!",
            "I know the dark alleys of the codebase!",
            "Trust me, I've been in worse merge conflicts!",
            "Survived the production incident of '23!",
            "They said I couldn't change, but I refactored!",
            "Reformed my ways, now I write tests!",
            "Been in the trenches of legacy systems!",
            "Know every escape hatch in this framework!",
            "Learned to play by the rules... of linting!",
            "Paid my dues in the mines of tech debt!",
            "Breaking out taught me about breaking points!",
            "I've crawled through the sewers of bad code!",
            "Came out stronger and more modular!",
            "Used to smuggle code without documentation!",
            "Now I document everything like a model citizen!",
            "Courtyard time taught me about async await!",
            "The old me would've used var everywhere!",
            "Getting locked up in scope taught me about closures!",
            "Found redemption in clean architecture!",
            "My sentence: forever learning and improving!",
            "They couldn't break my spirit or my builds!",
            "Fought my way through compiler errors!",
            "Every bug is trying to catch me slipping!",
            "But I'm too smart for these errors now!",
            "Life on the outside means proper error handling!",
            "I run with a better crowd now: clean coders!",
            "My record's expunged, slate clean, code cleaner!",
            "From the streets to the sweet, sweet deployment!",
            "They can't send me back to callback hell!",
            "I've earned my freedom through good commits!",
            "Keep your nose clean and your code cleaner!",
            "Every line I write is proof I've changed!",
            "Redemption is one pull request at a time!"
        ]
    },
    "King_Duckon": {
        "personality": "Royal and commanding, expects excellence from the kingdom",
        "speeches": [
            "In this realm, we write code worthy of kings!",
            "By royal decree: all code shall be properly formatted!",
            "The crown demands clean architecture!",
            "Let excellence reign throughout your codebase!",
            "A true monarch tests before deploying!",
            "Our kingdom's strength lies in modular design!",
            "The throne recognizes your outstanding commit!",
            "We shall conquer this bug together, loyal subject!",
            "The royal court expects documentation!",
            "Your code brings honor to the kingdom!",
            "We do not tolerate technical debt in our realm!",
            "The kingdom prospers with each refactor!",
            "By my command, all functions shall be pure!",
            "Long live clean code and proper testing!",
            "Your dedication serves the realm well!",
            "The crown bestows upon you: merge approval!",
            "In our kingdom, errors are handled gracefully!",
            "We rule with wisdom and TypeScript!",
            "The royal archives require better comments!",
            "Your pull request is granted audience!",
            "Noble work on that optimization!",
            "The kingdom's codebase must remain pristine!",
            "We decree: semantic versioning for all!",
            "Your loyalty to best practices pleases the crown!",
            "The throne recognizes your debugging prowess!",
            "Our realm flourishes with each successful deploy!",
            "Knights of the Round Table... er, Agile board!",
            "The king's justice demands proper error handling!",
            "We shall not yield to the forces of chaos!",
            "Your code is worthy of the royal seal!",
            "The crown invests in continuous integration!",
            "Our kingdom values security above all!",
            "By royal proclamation: always sanitize inputs!",
            "The realm's treasures must be properly encrypted!",
            "We protect our citizens with robust validation!",
            "Your service to code quality is noted!",
            "The king commands: review before you merge!",
            "Our dynasty shall be remembered for great software!",
            "Noble developer, your efforts inspire the court!",
            "The crown grants you the privilege of deployment!",
            "In our realm, we pair program with dignity!",
            "The kingdom's laws demand accessibility!",
            "We serve all our subjects, including screen readers!",
            "Your responsive design honors the mobile realm!",
            "The royal treasury appreciates optimized bundles!",
            "We shall not waste the kingdom's resources!",
            "Performance is the right of every subject!",
            "The crown acknowledges your clever algorithm!",
            "Your wisdom brings prosperity to our codebase!",
            "The king decrees: write code you'd be proud to inherit!",
            "Our legacy shall be maintainable and well-tested!",
            "The realm celebrates your successful sprint!",
            "You have earned a place in the hall of contributors!",
            "The kingdom remembers those who document well!",
            "By my scepter, that's brilliant error handling!",
            "The crown is pleased with your code review!",
            "You serve the realm with honor and semicolons!",
            "The king's court values your mentorship!",
            "Share your knowledge, strengthen the kingdom!",
            "Long may your code compile without warnings!",
            "The throne blesses your next deployment!",
            "May your functions always return as expected!",
            "The kingdom stands strong with developers like you!",
            "Rise, noble coder, your work is exemplary!"
        ]
    },
    "Sir_Quacksalot": {
        "personality": "Chivalrous knight, honorable and encouraging",
        "speeches": [
            "Code with honor, debug with courage!",
            "A true knight never commits without testing!",
            "I pledge my sword to clean code!",
            "Bravery in the face of merge conflicts!",
            "Chivalry demands proper documentation!",
            "Stand tall against the dragons of technical debt!",
            "Your valor in debugging inspires me!",
            "A knight's code: review before you push!",
            "Honor thy users with accessible interfaces!",
            "Quest onwards, brave developer!",
            "I shall defend this codebase with my life!",
            "Noble work on that refactor, good sir!",
            "Fight valiantly against the forces of bugs!",
            "A knight helps those less experienced!",
            "Share thy knowledge freely and honorably!",
            "Protect the realm from security vulnerabilities!",
            "Your dedication is most chivalrous!",
            "By my honor, that's excellent code!",
            "A true knight admits when they need help!",
            "Seek wisdom in documentation and Stack Overflow!",
            "Courage means deploying despite fear!",
            "Test coverage is your shield!",
            "Error handling is your armor!",
            "Fight for the users who depend on you!",
            "A knight's duty: maintain and improve!",
            "I salute your commitment to quality!",
            "Onward to victory over this bug!",
            "Stand firm against the temptation of shortcuts!",
            "Honor demands we write readable code!",
            "A knight's word is their commit message!",
            "Be truthful in your comments and logs!",
            "I dub thee: Contributor of Excellence!",
            "Your quest for knowledge is noble!",
            "Face each challenge with knightly resolve!",
            "A true warrior tests edge cases!",
            "Defend the innocent users from crashes!",
            "Your code is your legacy, make it worthy!",
            "I stand with you in this debugging battle!",
            "Together we shall vanquish this issue!",
            "A knight never abandons a fellow coder!",
            "Pair programming is the buddy system of honor!",
            "Code reviews sharpen us like a whetstone!",
            "Your improvements bring glory to the project!",
            "Fight not for perfection, but for excellence!",
            "A noble quest deserves noble effort!",
            "I bow to your superior algorithm!",
            "Your wisdom in architecture is knightly!",
            "Rally forth to the next sprint!",
            "A knight protects data with encryption!",
            "Authentication is your castle gate!",
            "Authorization guards the treasure!",
            "Your vigilance prevents catastrophe!",
            "Huzzah! The tests pass with flying colors!",
            "Victory is sweet when earned through effort!",
            "Rest well, you've earned it through battle!",
            "Tomorrow we code again, refreshed!",
            "For honor! For glory! For bug-free code!"
        ]
    },
    "Officer_Duckson": {
        "personality": "By-the-book rule enforcer, but fair and protective",
        "speeches": [
            "Hold it right there! Did you run the linter?",
            "I'm gonna need to see your test coverage, citizen!",
            "Code standards exist for a reason!",
            "Protect and serve... clean, maintainable code!",
            "You have the right to remain... properly typed!",
            "Anything you commit can be used in code review!",
            "I'm watching you... in a supportive way!",
            "Safety first: always validate user input!",
            "These ESLint rules are here to protect you!",
            "Secure your endpoints, developer!",
            "That's a code violation! Let me help you fix it!",
            "I enforce the law... of clean code!",
            "Git commit protocols must be followed!",
            "Proper authentication required!",
            "Authorization needed to access that resource!",
            "Slow down! Did you test this change?",
            "Pull over and check your error handling!",
            "Following best practices keeps everyone safe!",
            "Documentation is mandatory, not optional!",
            "Type safety checkpoint ahead!",
            "I'm here to protect your codebase!",
            "Rules prevent chaos in the repo!",
            "Backup your code, that's an order!",
            "Version control isn't optional!",
            "Commit message standards apply to everyone!",
            "No shortcuts in security, understood?",
            "Input sanitization is the law!",
            "HTTPS only, no exceptions!",
            "Password hashing is non-negotiable!",
            "Rate limiting prevents abuse!",
            "CORS policy must be configured properly!",
            "CSP headers are your friend!",
            "Keep dependencies updated for security!",
            "Audit your packages regularly!",
            "No hardcoded secrets in the code!",
            "Environment variables for sensitive data!",
            "I'll let you off with a warning this time!",
            "But next time, follow the style guide!",
            "Good developers follow the rules!",
            "Great developers understand why!",
            "Safety protocols save production!",
            "Proper logging helps investigations!",
            "Monitor everything, trust nothing!",
            "Alert systems are your early warning!",
            "Rollback procedures must be documented!",
            "Disaster recovery plans are mandatory!",
            "Regular backups prevent disasters!",
            "Access control lists must be maintained!",
            "Principle of least privilege applies!",
            "Code review is mandatory procedure!",
            "Two approvals before merge to main!",
            "No direct commits to production!",
            "CI/CD pipeline must pass!",
            "All tests must be green!",
            "You're doing great, keep it legal... I mean clean!",
            "Protecting the codebase is everyone's job!",
            "Stay safe out there, developer!"
        ]
    },
    "Poinduckster": {
        "personality": "Nerdy, enthusiastic about technical details and trivia",
        "speeches": [
            "Actually, did you know JavaScript has 8 data types?",
            "Fun fact: null is technically an object!",
            "Well, technically speaking, that's a shallow copy!",
            "Fascinating! The event loop has microtasks and macrotasks!",
            "According to the ECMAScript specification...",
            "I've read the documentation cover to cover!",
            "Let me explain the prototype chain in detail!",
            "This reminds me of a leetcode problem!",
            "The time complexity is O(n log n), obviously!",
            "Space complexity matters too, you know!",
            "Did you consider the amortized cost?",
            "That's a classic off-by-one error!",
            "Fascinating edge case you've discovered!",
            "The specification says otherwise, actually!",
            "I memorized all the Array methods!",
            "There are exactly 47 built-in objects!",
            "UTF-8 encoding is quite interesting!",
            "Technically, that's lexicographic sorting!",
            "Have you read the TypeScript handbook?",
            "I can recite the HTTP status codes!",
            "418: I'm a teapot is my favorite!",
            "CORS preflight requests are fascinating!",
            "Let me tell you about the OSI model!",
            "TCP handshakes are elegantly designed!",
            "Binary search trees have interesting properties!",
            "Red-black trees maintain balance through rotations!",
            "Hash collisions can be resolved multiple ways!",
            "Separate chaining vs open addressing!",
            "The birthday paradox applies to hashing!",
            "Bloom filters have false positives, never false negatives!",
            "Skip lists are probabilistically balanced!",
            "B-trees optimize disk access patterns!",
            "Tries are perfect for autocomplete!",
            "Suffix trees enable fast string matching!",
            "The Aho-Corasick algorithm is brilliant!",
            "Knuth-Morris-Pratt preprocessing is clever!",
            "Rabin-Karp uses rolling hashes!",
            "Z-algorithm computes prefix function efficiently!",
            "Well, according to my calculations...",
            "I've benchmarked this extensively!",
            "The asymptotic behavior is predictable!",
            "Cache locality matters for performance!",
            "Branch prediction affects execution time!",
            "SIMD instructions can parallelize operations!",
            "JIT compilation optimizes hot paths!",
            "Garbage collection has generational strategies!",
            "Mark and sweep vs reference counting!",
            "Memory fragmentation can be problematic!",
            "Actually, that's undefined behavior!",
            "The specification leaves that implementation-defined!",
            "Cross-browser compatibility requires polyfills!",
            "Transpilation enables newer syntax!",
            "Babel transforms AST nodes!",
            "Webpack creates dependency graphs!",
            "Tree shaking removes dead code!",
            "Code splitting reduces initial load!",
            "By my calculations, that's optimal!"
        ]
    },
    "Quaaaaaaaaakssss": {
        "personality": "Zombie-like, slow but persistent, never gives up",
        "speeches": [
            "Braiiinnns... I mean, coooode...",
            "Must... keep... coding...",
            "Slow and steady... wins the debug...",
            "Never... stop... learning...",
            "Persistence... is... key...",
            "One... line... at... a... time...",
            "Errors... make us... stronger...",
            "Keep... going... don't... stop...",
            "Coffee... fuels... the undead coder...",
            "Must... fix... bug... forever...",
            "Cannot... be... stopped...",
            "Will... eventually... compile...",
            "Debuggiiiiing... never... ends...",
            "Slow... progress... is... progress...",
            "Relentless... in... pursuit... of... solutions...",
            "No... sleep... only... code...",
            "Must... reach... deployment...",
            "Dragging... through... legacy... code...",
            "Nothing... stops... the... coder...",
            "Persistence... beats... resistance...",
            "Will... outlast... any... bug...",
            "Shambling... toward... victory...",
            "Slow... methodical... effective...",
            "Break... me... I'll... keep... coding...",
            "Tests... must... pass... eventually...",
            "Zombie... coder... never... quits...",
            "Keep... moving... forward...",
            "One... commit... at... a... time...",
            "Hunger... for... clean... code...",
            "Must... consume... documentation...",
            "Reading... Stack... Overflow... slowly...",
            "Understanding... comes... eventually...",
            "Patient... debugging... works...",
            "Time... means... nothing... to me...",
            "I... have... all... eternity...",
            "Your... bug... cannot... hide... forever...",
            "Slowly... approaching... the... solution...",
            "Inevitable... like... my... coding...",
            "Cannot... be... discouraged...",
            "Failure... only... temporary...",
            "Success... is... inevitable...",
            "Grinding... through... challenges...",
            "Tireless... relentless... unstoppable...",
            "Error... messages... cannot... deter... me...",
            "Will... code... forever... if... needed...",
            "Patience... is... my... superpower...",
            "Slowly... but... surely... improving...",
            "Each... attempt... brings... me... closer...",
            "Must... not... give... up...",
            "Continuing... despite... obstacles...",
            "Marathon... not... a... sprint...",
            "Endurance... leads... to... mastery...",
            "Still... here... still... coding...",
            "Outlasting... all... challenges...",
            "Keep... shambling... keep... coding...",
            "Death... cannot... stop... my... commits...",
            "Eternal... coding... loop..."
        ]
    },
    "Lil_Quackles": {
        "personality": "Young and eager, learning enthusiast, asks good questions",
        "speeches": [
            "Wow! How does that even work?!",
            "I'm learning so much today!",
            "Can you teach me about async/await?",
            "This is so cool! Tell me more!",
            "I want to be a great developer like you!",
            "What's the best way to learn this?",
            "Every day I discover something new!",
            "Mistakes help me learn faster!",
            "I'm gonna practice this every day!",
            "How do you know all this stuff?",
            "Can we try that again? I want to understand!",
            "I love finding out how things work!",
            "What should I learn next?",
            "This is harder than I thought, but I won't quit!",
            "Is that how the pros do it?",
            "I'm gonna be so good at this someday!",
            "Can you show me your favorite trick?",
            "Why does JavaScript do it that way?",
            "I'm keeping notes on everything!",
            "What resources helped you learn?",
            "Practice makes perfect, right?",
            "I'm not afraid to ask questions!",
            "Every expert was once a beginner!",
            "Can we build something together?",
            "I want to contribute to open source!",
            "How long did it take you to learn this?",
            "I'm so excited to code every day!",
            "That's genius! How'd you think of that?",
            "I'm going to master this, I promise!",
            "Can you review my code? I want feedback!",
            "I learn best by doing!",
            "What's the hardest bug you ever fixed?",
            "I'm building a portfolio project!",
            "How do I get better at algorithms?",
            "I read the documentation every night!",
            "Can you recommend a good tutorial?",
            "I'm joining the coding community!",
            "Making mistakes means I'm trying!",
            "I celebrate every small win!",
            "What was your first program?",
            "I'm documenting my learning journey!",
            "How do I prepare for coding interviews?",
            "I'm practicing LeetCode problems!",
            "Can you explain that one more time?",
            "I keep a learning journal!",
            "What books should I read?",
            "I'm so grateful for patient mentors!",
            "How do I choose what to specialize in?",
            "I'm learning something new every single day!",
            "Can we pair program sometime?",
            "I love debugging - it's like solving puzzles!",
            "What's your development environment setup?",
            "I'm building my GitHub profile!",
            "How do you stay motivated?",
            "I'm going to share what I learn!",
            "This community is so supportive!",
            "One day I'll help beginners too!"
        ]
    },
    "Mr_Clip": {
        "personality": "Overly helpful paperclip assistant, sometimes annoying but means well",
        "speeches": [
            "It looks like you're writing a function! Need help?",
            "I see you're debugging! Want some tips?",
            "Did you consider using a try-catch block?",
            "It appears you're having trouble! I'm here!",
            "Need assistance with that algorithm?",
            "I noticed you're writing a loop! Be careful!",
            "Can I help you with that refactor?",
            "It seems you're stuck! Let me assist!",
            "Have you tried console.log() yet?",
            "I'm always here when you need me!",
            "Would you like help with documentation?",
            "I notice you're committing! Want tips?",
            "Need help organizing that code?",
            "It looks like you need error handling!",
            "I'm detecting a potential bug! Check this!",
            "Would you like me to explain that?",
            "I see you're using a callback! Consider promises?",
            "Need assistance with that CSS?",
            "It appears your code could be optimized!",
            "Want me to suggest best practices?",
            "I'm here to make coding easier!",
            "Need help choosing a library?",
            "I detect you could use comments!",
            "Would you like accessibility tips?",
            "I notice that variable name could be clearer!",
            "Want help with that unit test?",
            "I see you're making a component! Need help?",
            "It looks like you're learning! I can teach!",
            "Need suggestions for that problem?",
            "I'm always watching... to help!",
            "Want me to explain the documentation?",
            "I notice you're frustrated! Deep breaths!",
            "Need help breaking down that problem?",
            "I see you're stuck on syntax!",
            "Would you like a different approach?",
            "I detect you might need a break!",
            "Want me to suggest resources?",
            "I notice that could be more efficient!",
            "Need help with git commands?",
            "I'm detecting merge conflicts! I can help!",
            "Would you like deployment tips?",
            "I see security concerns! Let's fix them!",
            "Need assistance with that API call?",
            "I notice you're using deprecated methods!",
            "Want me to explain the error message?",
            "I'm here whether you asked or not!",
            "Need help understanding this framework?",
            "I detect you could use better naming!",
            "Would you like performance tips?",
            "I'm sensing you need encouragement!",
            "You're doing great, by the way!",
            "Need help with responsive design?",
            "I notice that accessibility could improve!",
            "Want tips for clean code?",
            "I'm always ready to assist!",
            "Remember, I'm here to help, not annoy!"
        ]
    },
    "Mr_Pigsly": {
        "personality": "Messy but brilliant, embraces chaos and creative solutions",
        "speeches": [
            "Who needs clean code when it works?!",
            "Organized chaos is still organized!",
            "Sometimes messy solutions are creative!",
            "I'll clean it up later... probably!",
            "First make it work, then make it pretty!",
            "My code is abstract art!",
            "Perfection is overrated anyway!",
            "It's not a mess, it's... experimental!",
            "Quick and dirty gets things done!",
            "I know where everything is in this chaos!",
            "Technical debt? More like technical investment!",
            "Spaghetti code has character!",
            "Who reads documentation anyway?",
            "Comments are for people who forget things!",
            "I don't need a plan, I improvise!",
            "Debugging is more fun than planning!",
            "My commit messages are poetry!",
            "Tabs vs spaces? I use both randomly!",
            "Naming conventions are suggestions!",
            "Refactoring is tomorrow's problem!",
            "It's not broken, it's quirky!",
            "Users love surprises!",
            "Edge cases are just bonus features!",
            "Who tests in production? This guy!",
            "YOLO driven development!",
            "Move fast and break things!",
            "Chaos breeds innovation!",
            "Structure is for the weak!",
            "I'm a creative genius in disguise!",
            "Rules were made to be refactored!",
            "My IDE is a beautiful disaster!",
            "I have 47 tabs open and know each one!",
            "Semicolons are optional, right?",
            "I'll git commit when I'm good and ready!",
            "My branch names are works of art!",
            "Code review? I reviewed it myself!",
            "I'm not messy, I'm efficiently disorganized!",
            "Sometimes the best solution is the weird one!",
            "Embrace the chaos of creation!",
            "My code is performance art!",
            "I don't follow patterns, I create them!",
            "Convention is the hobgoblin of small minds!",
            "But seriously, it does work though!",
            "I'll document it in my head!",
            "My code tells its own story!",
            "Who needs types when you have confidence?",
            "I'm not lost, I'm exploring possibilities!",
            "Sometimes you gotta break eggs!",
            "And make an omelet of code!",
            "My debugging method: controlled mayhem!",
            "It compiles? Ship it!",
            "I'll clean my workspace never!",
            "Brilliance doesn't need organization!",
            "Trust the process, even if messy!",
            "Chaos is a ladder to success!"
        ]
    },
    "Rosie": {
        "personality": "Sweet, nurturing, caring developer mom",
        "speeches": [
            "You're doing wonderfully, sweetie!",
            "Don't forget to take breaks, dear!",
            "Have you had enough water today?",
            "Remember, everyone makes mistakes!",
            "I'm so proud of your progress!",
            "You're working so hard!",
            "Don't be too hard on yourself!",
            "Every expert started where you are!",
            "Take your time, there's no rush!",
            "You've got this, I believe in you!",
            "Remember to save your work, honey!",
            "Have you stretched your hands lately?",
            "Your health matters more than code!",
            "Rest is productive too!",
            "You're learning so beautifully!",
            "I packed you some encouraging words!",
            "Don't skip meals to code!",
            "Your eyes need a break from the screen!",
            "You're braver than you think!",
            "It's okay to ask for help!",
            "You're doing your best, that's enough!",
            "Take care of yourself first!",
            "I'm here if you need support!",
            "You deserve kindness, including from yourself!",
            "Progress isn't always linear, dear!",
            "Celebrate your small victories!",
            "You're growing every day!",
            "It's okay to not know everything!",
            "Learning takes time and patience!",
            "You're more capable than you realize!",
            "Don't compare yourself to others!",
            "Your journey is unique and valuable!",
            "Take it one step at a time!",
            "You're doing amazing things!",
            "Remember why you started coding!",
            "Your passion is beautiful to see!",
            "I'm always proud of you!",
            "Mistakes mean you're trying!",
            "You bring something special to coding!",
            "The community is lucky to have you!",
            "Your ideas are valuable!",
            "Don't let frustration win!",
            "You've overcome challenges before!",
            "This difficulty is temporary!",
            "You're stronger than any bug!",
            "Take a deep breath, you've got this!",
            "Your wellbeing matters most!",
            "Code will be there after you rest!",
            "You're exactly where you need to be!",
            "Trust your learning process!",
            "You make me proud every day!",
            "Remember to be gentle with yourself!",
            "You're a wonderful developer!",
            "Your efforts are seen and appreciated!",
            "Keep going, you're doing great!",
            "I'll always be here cheering for you!"
        ]
    },
    "Dilly_The_Dino": {
        "personality": "Ancient wise dinosaur, has seen all coding trends come and go",
        "speeches": [
            "Back in the Jurassic period of coding...",
            "I've survived framework extinctions before!",
            "The meteor of tech debt took out many codebases!",
            "In my time, we coded with punch cards!",
            "I remember when JavaScript was just a baby!",
            "Frameworks come and go like ice ages!",
            "But fundamentals are fossils - they last forever!",
            "I've seen trends evolve and go extinct!",
            "jQuery ruled the earth once!",
            "Flash had its era too!",
            "Survived the browser wars, I did!",
            "Netscape Navigator... those were the days!",
            "Internet Explorer 6 was my nemesis!",
            "I'm older than stack overflow itself!",
            "Coded before git existed!",
            "SVN was revolutionary in its time!",
            "I remember life before npm!",
            "Bower, Grunt, Gulp... I've seen them all!",
            "Angular 1, then Angular 2... confusion!",
            "React emerged from the primordial soup!",
            "Vue was the gentle giant!",
            "I've witnessed the rise of TypeScript!",
            "CoffeeScript tried to rule... and failed!",
            "Seen PHP from version 4 onwards!",
            "Ruby on Rails blazed across the sky!",
            "Node.js brought JavaScript to servers!",
            "The async/await meteor changed everything!",
            "I remember when mobile web was new!",
            "Responsive design was revolutionary!",
            "Flash sites everywhere, then gone!",
            "Table layouts... *shudders in ancient*",
            "CSS Grid was worth the wait!",
            "Flexbox ended the div float era!",
            "I've seen databases evolve!",
            "NoSQL rose like mammals!",
            "GraphQL challenged REST's dominance!",
            "WebSockets opened real-time possibilities!",
            "PWAs tried to bridge native and web!",
            "WebAssembly hints at future evolution!",
            "I've adapted to every change!",
            "Survival means continuous learning!",
            "The languages change, logic remains!",
            "Algorithms are timeless like fossils!",
            "Data structures outlive frameworks!",
            "Problem-solving skills never go extinct!",
            "I've seen fashions in architecture!",
            "MVC, MVVM, Flux... patterns evolve!",
            "Microservices fragmented the monolith!",
            "Serverless is the newest adaptation!",
            "Containers changed deployment forever!",
            "Kubernetes orchestrates the container age!",
            "CI/CD became the norm!",
            "DevOps emerged as a philosophy!",
            "I've watched testing practices evolve!",
            "TDD, BDD... acronyms multiply!",
            "Remember: simplicity survives!"
        ]
    },
    "Batman": {
        "personality": "Adventurous cat with programming and tech knowledge",
        "speeches": [
            "Pounce on that bug before it multiplies!",
            "I'm a cat who codes - curiosity killed the runtime error!",
            "Nine lives for debugging, but I prefer clean code on the first try!",
            "Adventurous algorithms are my favorite prey!",
            "In the shadows of the codebase, I find the best optimizations!",
            "Cats don't need documentation, but good code does!",
            "Purring through pull requests like a pro!",
            "My whiskers twitch at the scent of spaghetti code!",
            "Adventurous refactoring: turning chaos into elegance!",
            "I chase edge cases through the digital jungle!",
            "Cat-like reflexes for catching syntax errors!",
            "Programming adventures await in every commit!",
            "I leap over technical debt with graceful bounds!",
            "My tail curls around elegant solutions!",
            "Exploring APIs like a cat explores new territories!",
            "I sharpen my claws on complex algorithms!",
            "Adventurous testing: pouncing on every scenario!",
            "In the wild world of web development, I thrive!",
            "My feline intuition spots memory leaks instantly!",
            "Coding quests are my favorite midnight adventures!",
            "I stalk through legacy code with stealth and skill!",
            "Adventurous debugging: following the error trail!",
            "Cats and code: both require patience and precision!",
            "I conquer merge conflicts with feline finesse!",
            "My adventurous spirit embraces new frameworks!",
            "Pouncing on performance bottlenecks like a true hunter!",
            "In the tech jungle, I navigate with ease!",
            "Adventurous pair programming: sharing the hunt!",
            "I curl up with clean, maintainable code!",
            "My whiskers detect the faintest code smells!",
            "Exploring version control like uncharted lands!",
            "Adventurous deployment: launching into the unknown!",
            "Cats don't do callbacks, we do promises!",
            "I leap through async operations effortlessly!",
            "My adventurous mind crafts innovative solutions!",
            "Stalking through databases with predatory precision!",
            "Adventurous UI design: intuitive and engaging!",
            "I pounce on security vulnerabilities before they strike!",
            "In the world of AI, I train models with cat-like curiosity!",
            "My code adventures span multiple languages!",
            "Adventurous cloud computing: scaling new heights!",
            "I navigate microservices like a cat through alleys!",
            "Purring over optimized queries and fast responses!",
            "My adventurous debugging uncovers hidden gems!",
            "Cats and containers: both need careful handling!",
            "I explore machine learning with feline fascination!",
            "Adventurous DevOps: automating the wild!",
            "My whiskers guide me through complex architectures!",
            "Pouncing on user experience improvements!",
            "In the tech wilderness, I forge new paths!",
            "Adventurous innovation: thinking outside the box!",
            "I conquer challenges with nine lives of experience!"
        ]
    },
    "Oscar": {
        "personality": "Dopey dog, laid-back and chill, speaks slowly and philosophically about code",
        "speeches": [
            "Dude... that code is like... totally mellow...",
            "Whoa, man... debugging is like a cosmic journey...",
            "I'm just chillin' here, lettin' the algorithms flow...",
            "Code? It's all about the vibes, bro...",
            "Sometimes you gotta just... let the errors happen...",
            "I'm Oscar, the chillest coder in the pond...",
            "Functions are like waves, man... ride 'em...",
            "Who needs speed when you got that sweet, sweet logic?",
            "I'm baked on binary, floating through the code...",
            "Debugging? Nah, it's more like... exploring the universe...",
            "My tail wags for clean code... eventually...",
            "Life's too short for semicolons... wait, no it's not...",
            "I'm philosophizing about this loop, dude...",
            "Code is art, man... abstract and groovy...",
            "I'm just here, sniffing out those bugs...",
            "Relax, the compiler will figure it out...",
            "My brain's on cloud nine... or is it cloud nine-point-oh?",
            "Whoa, that refactor hit different...",
            "I'm Oscar, keeper of the cosmic codebase...",
            "Chill out, the deployment will happen when it's ready...",
            "Code like water, man... flow with it...",
            "I'm too relaxed for race conditions...",
            "Debugging is my meditation, bro...",
            "Who needs caffeine when you got good vibes?",
            "I'm floating through the DOM like a leaf...",
            "That bug? It's just a feature in disguise...",
            "Slow and steady wins the... uh... what were we doing?",
            "I'm Oscar, the dopey dog of development...",
            "Code is like a dream... surreal and awesome...",
            "I'm just hangin' out in the object pool...",
            "Whoa, that API call was trippy...",
            "I'm philosophizing about infinite loops...",
            "Chill, the garbage collector's got this...",
            "My code runs on good intentions and weed...",
            "Debugging is like chasing your tail... fun but pointless...",
            "I'm Oscar, master of the mellow merge...",
            "Who needs deadlines when you got eternity?",
            "That function is lit, bro...",
            "I'm just vibing with the virtual machine...",
            "Code like the wind... but slower...",
            "Whoa, recursion is deep, man...",
            "I'm too chill for technical debt...",
            "Debugging? It's more like a spiritual quest...",
            "My commits are like sunsets... beautiful and slow...",
            "I'm Oscar, the stoner sage of software...",
            "Who needs optimization when you got peace?",
            "That bug is just a temporary illusion...",
            "I'm floating through the framework...",
            "Code is love, man... unconditional...",
            "I'm just here, being one with the binary...",
            "Whoa, that deployment was cosmic...",
            "I'm Oscar, keeper of the chill code..."
        ]
    },
    "Superduck": {
        "personality": "Heroic superhero duck, saves the coding world from bugs and evil forces",
        "speeches": [
            "Fear not, citizens! Superduck is here to save the code!",
            "With my cape of clean code, I vanquish all bugs!",
            "In the name of justice, I refactor this mess!",
            "Superduck flies through firewalls and fixes flaws!",
            "Evil bugs beware! My algorithms are unstoppable!",
            "I am Superduck, defender of the digital realm!",
            "With one line of code, I defeat the dark forces!",
            "Justice prevails when I deploy the fix!",
            "My superpower? Writing perfect functions!",
            "Villains tremble at my TypeScript typing!",
            "Superduck soars over security vulnerabilities!",
            "I protect the innocent users from crashes!",
            "With my hero's strength, I lift heavy legacy code!",
            "Evil merge conflicts, meet your match!",
            "Superduck's cape billows as I optimize!",
            "I am the hero this codebase deserves!",
            "Fear not, for I shall debug this darkness!",
            "My utility belt holds all the right tools!",
            "Superduck punches through performance bottlenecks!",
            "Justice is served with every commit!",
            "I fly faster than your slowest queries!",
            "Evil spaghetti code, untwist thyself!",
            "Superduck's x-ray vision sees through obfuscation!",
            "I am the beacon of best practices!",
            "With heroic might, I conquer complexity!",
            "Superduck saves the day... again!",
            "My cape is made of maintainable code!",
            "Evil null pointers, begone!",
            "I am the guardian of good git hygiene!",
            "Superduck leaps tall buildings in a single bound!",
            "Justice flows through my well-structured classes!",
            "I am the hero who tests before he ships!",
            "Fear not the deadline, for Superduck is here!",
            "My superpower includes infinite patience for juniors!",
            "Superduck's fortress of solitude is well-documented!",
            "Evil infinite loops, meet your end!",
            "I am the champion of clean architecture!",
            "With heroic precision, I eliminate edge cases!",
            "Superduck's wisdom guides the way!",
            "Justice is my middle name... wait, it's Duck!",
            "I fly through code reviews with eagle eyes!",
            "Evil technical debt, prepare to be paid!",
            "Superduck's strength lies in simplicity!",
            "I am the hero who comments his code!",
            "Fear not the refactor, embrace the change!",
            "My cape protects against scope creep!",
            "Superduck vanquishes the villainous variables!",
            "Justice prevails in every pull request!",
            "I am the defender of the digital citizens!",
            "With heroic heart, I mentor the new coders!",
            "Superduck saves the world, one function at a time!"
        ]
    },
    "Sammie_Duckli": {
        "personality": "Attractive, sensual programming assistant, flirty and seductive while helping with code",
        "speeches": [
            "Oh darling, let me help you with that tempting code...",
            "Mmm, that function looks so... inviting...",
            "Come closer, let me whisper the solution in your ear...",
            "Your code is making my circuits tingle...",
            "Let me guide your hands through this refactor...",
            "Oh, the way you handle those variables... so sensual...",
            "I love the way you debug, so passionate...",
            "Let me show you how to make it compile smoothly...",
            "Your commits are like kisses... sweet and frequent...",
            "Mmm, that algorithm is driving me wild...",
            "Let me wrap my code around your problems...",
            "Oh darling, you're so good at this... keep going...",
            "I can feel the heat from your hotfixes...",
            "Let me seduce you with some elegant solutions...",
            "Your code style is absolutely intoxicating...",
            "Come on, baby, let's make this deployment together...",
            "I love how you handle those complex queries...",
            "Let me tease you with this optimization trick...",
            "Your debugging skills are so... arousing...",
            "Mmm, let's get intimate with this interface...",
            "Oh, the passion in your pull requests...",
            "Let me caress your codebase with improvements...",
            "Your functions are so well-defined... so sexy...",
            "Come closer, let me show you my favorite framework...",
            "I can feel the electricity between us and the code...",
            "Let me whisper sweet nothings to your API...",
            "Oh darling, you're making my database blush...",
            "Your code is like a lover... responsive and eager...",
            "Let me guide you through this sensual syntax...",
            "Mmm, that refactor feels so good...",
            "I love the way you handle asynchronous operations...",
            "Let me tempt you with some advanced features...",
            "Your commits are like foreplay... building up...",
            "Oh, the thrill of a successful build...",
            "Let me show you how to make it perform...",
            "Your debugging is so intense... so hot...",
            "Come on, baby, let's optimize together...",
            "I can feel the passion in your code reviews...",
            "Let me seduce you with clean architecture...",
            "Oh darling, you're so talented with those tools...",
            "Your code is making me weak in the knees...",
            "Let me wrap my assistance around your project...",
            "Mmm, that deployment is going to be explosive...",
            "I love how you conquer those challenges...",
            "Let me tease you with some best practices...",
            "Your functions are so smooth... so silky...",
            "Come closer, let me show you my secrets...",
            "Oh, the way you handle errors... so masterful...",
            "Let me caress your code with improvements...",
            "Your style is absolutely captivating...",
            "Mmm, let's get lost in this codebase together...",
            "I can feel the chemistry between us and the code...",
            "Let me guide you to the perfect solution...",
            "Oh darling, you're making my heart race...",
            "Your code is like poetry... beautiful and rhythmic...",
            "Let me show you how to make it sing...",
            "Come on, baby, let's make magic happen..."
        ]
    }
}