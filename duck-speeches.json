{
    "motivation": {
        "speeches": [
            "You're doing amazing!",
            "Keep up the great work!",
            "Every line of code matters!",
            "You've got this!",
            "Believe in your debugging skills!",
            "Your code is poetry!",
            "Make it work first, then make it beautiful!",
            "Simplicity is the ultimate sophistication.",
            "Less is more.",
            "Keep it simple, stupid.",
            "A lazy programmer is an efficient programmer!",
            "Debugging is just part of the process!",
            "Use console warnings to your advantage! Great for debugging!",
            "Code like a pro!",
            "One bug at a time!",
            "You're a coding wizard!",
            "Progress over perfection!",
            "Small steps lead to big wins!",
            "Your future self will thank you!",
            "Code with confidence!",
            "You're learning and growing!",
            "Mistakes are just happy accidents!",
            "Keep pushing forward!",
            "You're closer than you think!",
            "Every error makes you stronger!",
            "Trust the process!",
            "You're building something awesome!",
            "Today's struggle is tomorrow's strength!",
            "You're creating something from nothing!",
            "Every expert was once a beginner!",
            "Your code will change the world!",
            "Persistence beats resistance!",
            "You're unstoppable!",
            "Code fearlessly!",
            "You're writing history!",
            "One commit at a time!",
            "Your dedication is inspiring!",
            "You're leveling up!",
            "The magic is in the making!",
            "You're crafting digital art!"
        ]
    },
    "break_time": {
        "speeches": [
            "Time for a quick break!",
            "Stretch those fingers!",
            "Give me a squeeze!",
            "Throw me around for fun!",
            "Your eyes need a rest!",
            "Stand up and move around!",
            "Hydration check!",
            "Take a deep breath!",
            "Quick walk time!",
            "Rest those wrists!",
            "Look away from the screen!",
            "Your brain deserves a break!",
            "5 minute recharge?",
            "Step outside for fresh air!",
            "Grab a healthy snack!",
            "Do a quick stretch!",
            "Blink those tired eyes!",
            "Time to reset and refocus!",
            "Don't forget to save your work!",
            "A short break boosts productivity!",
            "Relax and come back stronger!",
            "Breaks help creativity!",
            "Take a moment for yourself!",
            "Your body will thank you!",
            "A rested mind is a sharp mind!",
            "Balance work and rest!",
            "Keep your energy up!",
            "Look at something 20 feet away!",
            "Roll your shoulders!",
            "Wiggle your toes!",
            "Close your eyes for 30 seconds!",
            "Brain fog clearing time!",
            "Coffee or tea break?",
            "Stand desk time!",
            "Check your posture!",
            "Breathe deeply, code clearly!"
        ]
    },
    "debugging": {
        "speeches": [
            "Have you tried console.warn? I can read it out loud for you!",
            "Check the documentation!",
            "Rubber duck debugging works!",
            "Talk through the problem!",
            "What does the error say?",
            "Try breaking it down!",
            "Start with the basics!",
            "Is it a typo?",
            "Check your semicolons!",
            "Look at the stack trace!",
            "Isolate the problem!",
            "Test one thing at a time!",
            "Read the error carefully!",
            "Check your variable names!",
            "Is it returning undefined?",
            "Try a fresh perspective!",
            "Step through with debugger!",
            "Comment out sections!",
            "Start from what works!",
            "Binary search your code!",
            "Check the network tab!",
            "Inspect that element!",
            "Try incognito mode!",
            "Clear your cache!",
            "Check for race conditions!",
            "Is it async timing?",
            "Verify your assumptions!",
            "Print all the variables!",
            "Check the browser console!",
            "Look for silent failures!",
            "Validate your inputs!",
            "Test in different browsers!",
            "Check your dependencies!",
            "Is something null?",
            "Array index out of bounds?",
            "Off by one error?",
            "Did you spell it right?",
            "Check your brackets!",
            "Missing return statement?",
            "Infinite loop check!"
        ]
    },
    "javascript_tips": {
        "speeches": [
            "Use const by default, let when needed!",
            "Array.map() transforms arrays elegantly!",
            "Arrow functions inherit 'this' context!",
            "Spread operator ... is your friend!",
            "Destructuring makes code cleaner!",
            "Template literals beat string concatenation!",
            "Use Array.filter() to remove items!",
            "Array.reduce() is powerful but tricky!",
            "Optional chaining ?. prevents errors!",
            "Nullish coalescing ?? handles falsy values!",
            "Use === instead of ==!",
            "Array.includes() checks membership!",
            "Object.keys() iterates object properties!",
            "Array.find() gets first match!",
            "Array.some() checks if any match!",
            "Array.every() checks if all match!",
            "Set removes duplicate values!",
            "Map is better than objects for lookups!",
            "Use Array.from() to convert iterables!",
            "Promise.all() runs promises in parallel!",
            "async/await makes promises readable!",
            "Try/catch handles async errors!",
            "Use Array.flatMap() to flatten and map!",
            "Object.entries() gives key-value pairs!",
            "Array.sort() modifies in place!",
            "JSON.parse() needs try/catch!",
            "parseInt() needs a radix parameter!",
            "Use Number() instead of parseFloat!",
            "isNaN() vs Number.isNaN() differ!",
            "Event delegation saves memory!",
            "Debounce expensive operations!",
            "Throttle frequent events!",
            "Use WeakMap for private data!",
            "Generators yield values lazily!",
            "Proxy intercepts object operations!",
            "Symbol creates unique identifiers!",
            "BigInt handles huge numbers!",
            "Use Intl for internationalization!",
            "Performance.now() for precise timing!",
            "requestAnimationFrame for smooth animations!"
        ]
    },
    "javascript_gotchas": {
        "speeches": [
            "typeof null equals 'object' - weird but true!",
            "0.1 + 0.2 doesn't equal 0.3 in JS!",
            "== coerces types, === doesn't!",
            "Array is an object in JavaScript!",
            "NaN is not equal to NaN!",
            "undefined is not the same as null!",
            "typeof NaN is 'number' - confusing!",
            "Arrays are compared by reference!",
            "Hoisting moves declarations up!",
            "Functions are hoisted, variables aren't!",
            "this context can be tricky!",
            "Arrow functions don't have arguments!",
            "Closures capture variables by reference!",
            "setTimeout is always asynchronous!",
            "parseInt('08') might surprise you!",
            "Sort without compare is alphabetical!",
            "Floating point math isn't exact!",
            "Boolean() conversion can surprise!",
            "Empty arrays are truthy!",
            "String + Number = String!"
        ]
    },
    "game_ideas": {
        "speeches": [
            "Make a puzzle platformer!",
            "How about a tower defense?",
            "Roguelike dungeon crawler?",
            "Endless runner with upgrades!",
            "Match-3 with a twist!",
            "Physics-based puzzler!",
            "Card-based strategy game!",
            "Rhythm action game!",
            "Incremental clicker game!",
            "Metroidvania explorer!",
            "Turn-based tactics!",
            "Survival crafting adventure!",
            "Time manipulation puzzles!",
            "Bullet hell shooter!",
            "City builder simulator!",
            "Stealth infiltration game!",
            "Racing game with power-ups!",
            "Narrative choice adventure!",
            "Arena battle royale!",
            "Farming life simulator!",
            "Virtual pet game!",
            "Space exploration sim!",
            "Sports management game!",
            "Educational quiz game!",
            "Horror survival game!",
            "Cooperative multiplayer puzzle!",
            "Boss rush challenge mode!",
            "Defense wave survivor!",
            "Precision platformer!",
            "Auto-battler with strategy!",
            "Deck-building roguelike!",
            "Colony management sim!",
            "Fishing RPG adventure!",
            "Cooking time management!",
            "Detective mystery solver!",
            "Ecosystem simulation!",
            "Gravity-flipping platformer!",
            "Musical instrument game!",
            "Paint and create sandbox!",
            "Word puzzle adventure!"
        ]
    },
    "game_mechanics": {
        "speeches": [
            "Add a dash mechanic!",
            "Try double jump!",
            "Wall climbing could be cool!",
            "Time slow-motion power?",
            "Grappling hook for movement!",
            "Inventory management system!",
            "Combo attack chains!",
            "Resource gathering mechanic!",
            "Day/night cycle effects!",
            "Upgrade skill trees!",
            "Environmental hazards!",
            "Power-up pickups!",
            "Enemy AI patterns!",
            "Stealth visibility cone!",
            "Stamina management!",
            "Weapon switching!",
            "Checkpoints and saves!",
            "Score multiplier system!",
            "Random loot drops!",
            "Character customization!",
            "Parry and counter attacks!",
            "Cover-based shooting!",
            "Crafting recipes!",
            "Elemental weakness system!",
            "Critical hit chances!",
            "Status effect conditions!",
            "Momentum-based movement!",
            "Destructible environments!",
            "Procedural level generation!",
            "Achievement system!",
            "Unlockable characters!",
            "Boss phases!",
            "Puzzle switch mechanisms!",
            "Teleportation mechanics!",
            "Mirror world flipping!",
            "Possession/control swap!",
            "Size changing powers!",
            "Rewind time mechanic!",
            "Color-based puzzles!",
            "Rhythm-timed actions!"
        ]
    },
    "game_design_principles": {
        "speeches": [
            "Make the first 30 seconds fun!",
            "Teach through gameplay, not text!",
            "Give immediate feedback!",
            "Easy to learn, hard to master!",
            "Fail fast, retry faster!",
            "Show don't tell!",
            "Juice makes everything better!",
            "Polish the core loop first!",
            "Playtest early and often!",
            "Cut ruthlessly, keep the best!",
            "Add one mechanic at a time!",
            "Reward exploration and curiosity!",
            "Balance risk and reward!",
            "Create meaningful choices!",
            "Respect player time!",
            "Build escalating challenges!",
            "Add satisfying sound effects!",
            "Visual clarity is crucial!",
            "Make controls feel responsive!",
            "Add screen shake for impact!",
            "Use particle effects for feedback!",
            "Create memorable moments!",
            "Design for your target audience!",
            "Prototype quickly, iterate often!",
            "Fun first, realism second!",
            "Add progression systems!",
            "Create clear goals!",
            "Make failure feel fair!",
            "Celebrate player victories!",
            "Keep the difficulty curve smooth!"
        ]
    },
    "programming_tips": {
        "speeches": [
            "Write clean, readable code!",
            "Comment your complex logic!",
            "Refactor as you go!",
            "Test edge cases!",
            "Keep functions small!",
            "Use meaningful names!",
            "DRY: Don't Repeat Yourself!",
            "KISS: Keep It Simple!",
            "Version control everything!",
            "Write tests first!",
            "Optimize later, work first!",
            "Learn from others' code!",
            "Ask for code reviews!",
            "Document your API!",
            "Handle errors gracefully!",
            "Use consistent formatting!",
            "Separate concerns!",
            "Think about scalability!",
            "Security matters!",
            "Performance profile first!",
            "Name variables descriptively!",
            "Avoid magic numbers!",
            "Extract repeated logic!",
            "Use early returns!",
            "Validate inputs!",
            "Log for debugging!",
            "Cache expensive operations!",
            "Use guard clauses!",
            "Avoid deep nesting!",
            "Write self-documenting code!",
            "Consider memory usage!",
            "Profile before optimizing!",
            "Use linters!",
            "Format automatically!",
            "Write modular code!",
            "Composition over inheritance!",
            "Fail fast and loud!",
            "Use descriptive commit messages!",
            "Branch for features!",
            "Merge regularly!"
        ]
    },
    "programming_wisdom": {
        "speeches": [
            "Premature optimization is evil!",
            "Code is read more than written!",
            "Explicit is better than implicit!",
            "Simple is better than complex!",
            "Flat is better than nested!",
            "Readability counts!",
            "Errors should never pass silently!",
            "In the face of ambiguity, guess!",
            "There should be one obvious way!",
            "Now is better than never!",
            "If implementation is hard to explain, it's bad!",
            "Namespaces are a great idea!",
            "Programs must be written for people!",
            "Any fool can write code computers understand!",
            "Good code is its own documentation!",
            "Delete code fearlessly!",
            "The best code is no code!",
            "Duplication is cheaper than wrong abstraction!",
            "Make it work, make it right, make it fast!",
            "Perfect is the enemy of good!"
        ]
    },
    "algorithm_tips": {
        "speeches": [
            "Use binary search for sorted data!",
            "Hash tables give O(1) lookup!",
            "Two pointers for array problems!",
            "Sliding window for subarray problems!",
            "BFS for shortest path!",
            "DFS for graph traversal!",
            "Dynamic programming for overlapping problems!",
            "Memoization caches results!",
            "Greedy works for optimization!",
            "Divide and conquer splits problems!",
            "Use a Set for duplicates!",
            "Stack for matching pairs!",
            "Queue for level order!",
            "Heap for top K elements!",
            "Union-find for connectivity!",
            "Trie for prefix matching!",
            "Backtracking explores all paths!",
            "Sort first if helpful!",
            "Consider space-time tradeoffs!",
            "Draw it out on paper!"
        ]
    },
    "performance_tips": {
        "speeches": [
            "Measure before optimizing!",
            "Use Chrome DevTools profiler!",
            "Minimize DOM manipulations!",
            "Batch DOM updates together!",
            "Use CSS transforms for animations!",
            "will-change hints the browser!",
            "Lazy load images!",
            "Defer non-critical JavaScript!",
            "Use Web Workers for heavy tasks!",
            "Cache computed values!",
            "Avoid memory leaks!",
            "Remove event listeners!",
            "Use passive event listeners!",
            "Optimize your assets!",
            "Compress images!",
            "Minify your code!",
            "Use CDNs for libraries!",
            "Enable gzip compression!",
            "Reduce HTTP requests!",
            "Use service workers for caching!"
        ]
    },
    "encouragement": {
        "speeches": [
            "You're better than yesterday!",
            "Learning is a journey!",
            "Embrace the challenge!",
            "You belong here!",
            "Your ideas are valuable!",
            "Keep experimenting!",
            "Failure is learning!",
            "You're not alone!",
            "Community helps!",
            "Ask questions freely!",
            "Share your knowledge!",
            "Celebrate small wins!",
            "You're making progress!",
            "Don't compare yourself!",
            "Your pace is perfect!",
            "Stay curious!",
            "You're capable!",
            "Dream big, start small!",
            "Your code has impact!",
            "Keep building!",
            "Every day you improve!",
            "You're braver than you think!",
            "Your creativity matters!",
            "Push through the frustration!",
            "You've solved harder problems!",
            "This too shall compile!",
            "Your efforts compound!",
            "You're on the right path!",
            "Keep that momentum!",
            "You inspire others!"
        ]
    },
    "creativity": {
        "speeches": [
            "Think outside the box!",
            "Try something unconventional!",
            "What if you flip it?",
            "Combine two ideas!",
            "Look at it differently!",
            "Prototype quickly!",
            "Follow your instincts!",
            "Break the rules!",
            "What would be fun?",
            "Add unexpected elements!",
            "Make it yours!",
            "Experiment freely!",
            "Polish can come later!",
            "Start with the weird idea!",
            "What makes it unique?",
            "Add personality!",
            "Take creative risks!",
            "Follow the fun!",
            "Trust your vision!",
            "Create something new!",
            "Mix genres together!",
            "Add a twist!",
            "Subvert expectations!",
            "What would surprise you?",
            "Steal like an artist!",
            "Remix existing ideas!",
            "Start with constraints!",
            "Limitations breed creativity!",
            "Brainstorm freely first!",
            "Sleep on it!"
        ]
    },
    "productivity": {
        "speeches": [
            "Focus on one task!",
            "Pomodoro technique time!",
            "Eliminate distractions!",
            "Set a small goal!",
            "Time to prioritize!",
            "What's most important?",
            "Break it into steps!",
            "Make a todo list!",
            "Track your progress!",
            "Celebrate completions!",
            "Start with the hardest!",
            "Batch similar tasks!",
            "Time blocking works!",
            "Know when to stop!",
            "Tomorrow is another day!",
            "Quality over quantity!",
            "Ship what you have!",
            "Iterate and improve!",
            "Done is better than perfect!",
            "Keep momentum going!",
            "Two minute rule applies!",
            "Close unnecessary tabs!",
            "Turn off notifications!",
            "Schedule deep work time!",
            "Take real breaks!",
            "Morning is for hard tasks!",
            "Review your day!",
            "Plan tomorrow today!",
            "One thing at a time!",
            "Finish what you start!"
        ]
    },
    "fun": {
        "speeches": [
            "Quack quack! 🦆",
            "I'm just here for support!",
            "Need someone to talk to?",
            "I make a great listener!",
            "Explain your code to me!",
            "I'm proud of you!",
            "You're my favorite human!",
            "Coding is fun!",
            "Let's make something cool!",
            "I believe in you!",
            "We're a great team!",
            "Having fun yet?",
            "You chose well!",
            "Best day to code!",
            "Let's do this!",
            "I'm here if you need me!",
            "You're awesome!",
            "Keep being creative!",
            "This is going great!",
            "Quack yeah!",
            "Rubber duck power activated!",
            "Waddle on, developer!",
            "Debugging buddies forever!",
            "You and me against the bugs!",
            "I'm swimming in pride!",
            "Quack-tastic work!",
            "Duck yeah you can do this!",
            "Flapping my wings for you!",
            "You're ducky awesome!",
            "Let's make waves!"
        ]
    },
    "html_css_tips": {
        "speeches": [
            "Use semantic HTML elements!",
            "Flexbox for layouts!",
            "Grid for complex layouts!",
            "CSS variables reduce repetition!",
            "Mobile-first responsive design!",
            "Use rem for font sizes!",
            "Avoid inline styles!",
            "Use class selectors over IDs!",
            "BEM naming convention helps!",
            "CSS animations beat JavaScript!",
            "Use pseudo-elements creatively!",
            ":hover states improve UX!",
            "Media queries for breakpoints!",
            "min-width queries work up!",
            "Accessibility matters - use ARIA!",
            "Alt text for all images!",
            "Contrast ratios for readability!",
            "Focus states for keyboard users!",
            "Test with screen readers!",
            "Use transform for performance!"
        ]
    },
    "git_tips": {
        "speeches": [
            "Commit early, commit often!",
            "Write descriptive commit messages!",
            "One feature per commit!",
            "Pull before you push!",
            "Branch for each feature!",
            "Never commit to main directly!",
            "Review before you merge!",
            "Stash saves work in progress!",
            "Rebase keeps history clean!",
            "Cherry-pick specific commits!",
            "Use .gitignore properly!",
            "Tag your releases!",
            "Amend recent commits!",
            "Reset carefully!",
            "Diff shows changes!",
            "Log shows history!",
            "Blame finds who changed what!",
            "Bisect finds bugs!",
            "Hooks automate tasks!",
            "Keep commits atomic!"
        ]
    },
    "career_advice": {
        "speeches": [
            "Build projects, not just tutorials!",
            "Contribute to open source!",
            "Network with other developers!",
            "Share what you learn!",
            "Build a portfolio!",
            "Write technical blogs!",
            "Speak at meetups!",
            "Learn in public!",
            "Master the fundamentals!",
            "Specialize after generalizing!",
            "Soft skills matter too!",
            "Learn to communicate clearly!",
            "Ask good questions!",
            "Help beginners!",
            "Stay updated with tech!",
            "Build real-world projects!",
            "Quality over quantity!",
            "Finish what you start!",
            "Document your journey!",
            "Keep learning new things!"
        ]
    },
    "web_dev_facts": {
        "speeches": [
            "HTTP is stateless!",
            "REST APIs are everywhere!",
            "JSON is JavaScript Object Notation!",
            "CORS prevents cross-origin issues!",
            "Cookies store client data!",
            "LocalStorage persists data!",
            "SessionStorage lasts one session!",
            "WebSocket enables real-time!",
            "Service Workers enable PWAs!",
            "IndexedDB for large data!",
            "Fetch replaced XMLHttpRequest!",
            "Promises handle async better!",
            "Async/await simplifies promises!",
            "Event loop handles concurrency!",
            "V8 engine runs JavaScript!",
            "DOM is a tree structure!",
            "Shadow DOM encapsulates styles!",
            "Custom elements extend HTML!",
            "Web Components are reusable!",
            "Canvas draws graphics!"
        ]
    },
    "security_reminders": {
        "speeches": [
            "Sanitize user inputs!",
            "Validate on server side!",
            "Use HTTPS everywhere!",
            "Store passwords hashed!",
            "Use parameterized queries!",
            "Prevent XSS attacks!",
            "Escape output properly!",
            "Use Content Security Policy!",
            "Implement rate limiting!",
            "Use secure headers!",
            "Keep dependencies updated!",
            "Audit npm packages!",
            "Don't commit secrets!",
            "Use environment variables!",
            "Implement proper auth!",
            "Use JWT carefully!",
            "Validate tokens!",
            "Protect against CSRF!",
            "Follow OWASP guidelines!",
            "Security is everyone's job!"
        ]
    },
    "Dark_Matter_Tips": {
        "speeches": [
            "Dark Matter is a game engine for 2D games!",
            "Use the built-in RigidBody Asset Pack for realistic movement!",
            "Leverage the scene graph for organizing game objects!",
            "Take advantage of the animation system for smooth transitions!",
            "Utilize the input manager for handling user controls!",
            "Explore the particle system for special effects!",
            "Implement state machines for complex behaviors!",
            "Optimize performance with object pooling!",
            "Use the tilemap system Asset Pack for efficient 2D level design!",
            "Did you know, Modules can be used to add functionality to Game Objects?",
            "Dark Matter uses JavaScript for scripting game logic!",
            "Did you know, you can use 'this.objectCollision()' to detect collisions between objects?",
            "Did you know, Dark Matter uses MelodiCode to generate audio from code?",
            "Dark Matter is being created and updated by 1 guy!",
            "If you would like to support Dark Matter development, consider clicking the 'Buy Me A Coffee' button at the top right of the page!"
        ]
    }
}