/* Game canvas styling */
#gameCanvas {
    background-color: #000;
    display: block;
    margin: 5px;
}

/* Active toolbar button for play/stop */
.toolbar-button.active {
    background-color: rgba(255, 255, 255, 0.2);
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
}

/* Viewport dragging */
.viewport-dragging {
    /*user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    cursor: move !important;*/
}

/* Make sure we capture all drag events */
body.viewport-dragging {
    overflow: hidden;
}

/* Game loading state */
body.game-loading {
    cursor: progress;
}

/* Loading overlay */
.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.7);
    display: none;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    z-index: 1000;
}

body.game-loading .loading-overlay {
    display: flex;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: #4CAF50;
    animation: spin 1s linear infinite;
    margin-bottom: 20px;
}

.loading-text {
    color: white;
    font-size: 18px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Canvas view container styling */
.canvas-view {
    display: none;
    position: relative;
    width: 100%;
    height: 100%;
    background: #1a1a1a;
    overflow: auto; /* Add scrollbars when needed */
}

/* Show active canvas view */
.canvas-view.active {
    display: flex !important; /* Use !important to override any conflicts */
    flex-direction: column; /* Stack children vertically */
}

/* Editor specific container */
.editor-canvas-container {
    position: relative;
    flex: 1;
    overflow: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

.editor-canvas-container canvas {
    display: block;
    min-width: 800px;
    min-height: 600px;
    width: 100%;
    height: 100%;
    object-fit: contain;
}

/* Canvas elements - prevent them from being squashed */
#gameCanvas {
    display: block;
    min-width: 800px;
    min-height: 600px;
}

/* Canvas container that holds both views */
.canvas-container {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: hidden;
}

/* Fix for the axis indicator */
.axis-indicator {
    position: absolute;
    bottom: 10px;
    left: 10px;
    pointer-events: none;
    z-index: 10;
}

/* Game view controls */
.game-toolbar {
    display: flex;
    justify-content: space-between;
    background: #1a1a1a;
    padding: 5px;
    height: 32px;
    box-sizing: border-box;
}

.game-controls {
    display: flex;
    gap: 5px;
}

.game-button {
    background: #2a2a2a;
    border: none;
    color: #ccc;
    width: 28px;
    height: 24px;
    border-radius: 3px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}

.game-button:hover {
    background: #3a3a3a;
    color: white;
}

.game-info {
    display: flex;
    align-items: center;
    gap: 10px;
    color: #aaa;
    font-size: 12px;
}

/* Game Canvas Container */
.game-canvas-container {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden !important;
    position: relative;
    background: #000;
}

/* Fullscreen mode */
.fullscreen-mode {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
    background: black;
}

.fullscreen-mode .game-canvas-container {
    width: 100%;
    height: calc(100% - 32px);
}

/* Dropdown menu */
.game-dropdown {
    position: relative;
    display: inline-block;
}

.game-dropdown-content {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background: #2a2a2a;
    min-width: 200px;
    padding: 10px;
    z-index: 10;
    border-radius: 3px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
}

.game-dropdown:hover .game-dropdown-content {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.game-dropdown-content label {
    display: flex;
    align-items: center;
    color: #ccc;
    font-size: 12px;
    margin: 2px 0;
}

.game-dropdown-content select {
    background: #333;
    color: #ccc;
    border: 1px solid #444;
    border-radius: 3px;
    padding: 2px 5px;
    margin-left: 5px;
}

/* Resolution display */
#resolutionDisplay {
    font-family: monospace;
}

/* Game canvas container styling */
.game-canvas-container {
    position: relative !important;
    width: 100% !important;
    height: 100% !important;
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    overflow: hidden !important;
    background: #000;
}

/* Remove any minimum size constraints on the canvas */
#gameCanvas {
    position: absolute !important;
    min-width: 0 !important;
    min-height: 0 !important;
    max-width: 100% !important;
    max-height: 100% !important;
    object-fit: contain !important;
}

/* Fullscreen mode styling */
.fullscreen-mode {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    z-index: 10000 !important;
    background: black !important;
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
}

.fullscreen-mode #gameCanvas {
    max-width: 100vw;
    max-height: 100vh;
}

.game-canvas-container {
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    overflow: hidden !important;
    width: 100% !important;
    height: 100% !important;
}

/* Update canvas positioning for better centering */
.game-canvas-container canvas,
#gameCanvas {
    position: relative !important; /* Change from absolute to relative */
    top: auto !important;
    left: auto !important;
    max-width: 100% !important;
    max-height: 100% !important;
    object-fit: contain !important;
    margin: 0 auto !important; /* Center horizontally */
}
